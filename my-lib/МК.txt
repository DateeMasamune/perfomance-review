Этапы мастер класса:

- У нас есть 2 одинаковых сайта, на которых используются одинаковые футер и хедер,
 потому что каждым из сайтов занимается своя команда и они находятся в разных репозиториях,
что бы избежать повторных правок и единовременной синхронизации футера и хедера на двух сайтах,
было решено вынести футер и хедер в отдельный репозиторий и оформить как библиотеку.

- Копируем футер и хедер из сайта в новый репозиторий, который будет выполнять роль библиотеки 

- НАСТРАИВАЕМ импорты в точку входу в библиотеку

- НАСТРАИВАЕМ tsconfig для режима библиотеки:

    "declaration": true, // настройка для генерации деклараций типов (для автоподстановки вариантов типов)
    "emitDeclarationOnly": true, // настройка, которая говорит ТС генерировать только декларации типов, не компилируя TS в JS
    "outDir": "dist", // настройка, которая указывает в какую папку генерировать типы

- НАСТРАИВАЕМ vite.config.ts:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import { resolve } from 'path'
import { libInjectCss } from 'vite-plugin-lib-inject-css'; //плагин для инъекции css файла при загрузке библиотеки

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react(), libInjectCss()],
  build: {
    copyPublicDir: false, // не копировать папку public
    lib: { // настройка для сборки под библиотеку https://vitejs.dev/guide/build.html#library-mode
      entry: resolve(__dirname, 'src/lib.ts'), // точка входа библиотеки
      name: 'lib-origin',
    },
    rollupOptions: { // настройки сборщика rollup
      external: ['react', 'react-dom'], // исключить из библиотки, библиотеки которые уже должны быть установлены в проекте
      output: {
        globals: { // глобальные переменные
          react: 'React'
        }
      }
    }
  }
})

- НАСТРАИВАЕМ package.json для работы в режиме библиотеки:

  "name": "lib-origin", Описание: Указывает имя пакета. Это имя используется для идентификации пакета в реестре npm и при установке пакета через npm или yarn.
  "version": "1.0.6", Описание: Указывает текущую версию пакета. Версия должна соответствовать стандарту семантического версионирования (semver).
  "type": "module", Описание: Указывает, что пакет следует рассматривать как ECMAScript Module (ESM). Это влияет на то, как файлы JavaScript будут интерпретироваться (как модули или как скрипты).
  "main": "./dist/lib-origin.umd.cjs", Описание: Указывает главный файл пакета, который будет использоваться при импорте пакета с помощью CommonJS (require). Это стандартный входной файл для Node.js.
  "types": "./dist/src/lib.d.ts", Описание: Указывает путь к файлу объявлений TypeScript (.d.ts), который содержит типы для пакета. Это помогает TypeScript проектам понимать типы при использовании вашего пакета.
  "exports": { Описание: Определяет различные точки входа для пакета для разных типов модулей (ESM и CJS). Это позволяет указать, какие файлы использовать при импорте пакета в зависимости от типа импорта.
    ".": { Корневая точка входа для пакета.
      "import": "./dist/lib-origin.js", Файл для импорта с помощью ECMAScript Modules (ESM) (import).
      "require": "./dist/lib-origin.umd.cjs", Файл для импорта с помощью CommonJS (CJS) (require).
      "types": "./dist/src/lib.d.ts" Файл объявлений TypeScript для типов.
    }
  },
  "files": [
    "dist" Описание: Определяет массив файлов и директорий, которые будут включены в пакет при публикации. Это позволяет ограничить, какие файлы будут включены в опубликованный пакет.
  ],
 "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "tsc": "tsc -b --force",
    "build:lib": "npm run build && npm run tsc",
    "publish": "npm publish",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
 "peerDependencies": { // Описание: указывает потребителю какие пакеты должны быть установлены для работы библиотеки
    "react": "^17.0.0 || ^18.0.0",
    "react-dom": "^17.0.0 || ^18.0.0"
  }

- ПУБЛИКУЕМ пакет на npm

Итоги:

- Разобрались как настраивать package.json

- Разобрались как настраивать vite.config

- Разобрались как настраивать tsconfig


npm log:
date-masamune
331890Da12!